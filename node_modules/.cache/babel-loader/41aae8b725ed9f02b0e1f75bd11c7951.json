{"ast":null,"code":"var _jsxFileName = \"/home/everton/www/ignite/trilha_reactjs/Chapter_II/desafios/ignite-template-reactjs-criando-um-hook-de-carrinho-de-compras-master/src/hooks/useCart.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext({});\nexport function CartProvider({\n  children\n}) {\n  _s();\n\n  const [cart, setCart] = useState(() => {\n    const storagedCart = localStorage.getItem('@RocketShoes:cart');\n\n    if (storagedCart) {\n      return JSON.parse(storagedCart);\n    }\n\n    return [];\n  });\n\n  const addProduct = async productId => {\n    try {\n      // TODO\n      const response = await api.get(`/products/${productId}`);\n      const productInCart = cart.find(item => item.id === productId);\n\n      if (productInCart) {\n        const amount = productInCart.amount + 1;\n        updateProductAmount({\n          productId,\n          amount\n        });\n      } else {\n        const responseStock = await api.get(`/stock`);\n        const stock = responseStock.data;\n        const stockByProduct = stock.find(item => item.id === productId);\n\n        if (stockByProduct === null || stockByProduct === void 0 ? void 0 : stockByProduct.id) {\n          response.data.amount = 1;\n          const addValited = stockByProduct.amount - response.data.amount < 0 ? false : true;\n\n          if (addValited) {\n            setCart(oldState => [...oldState, response.data]);\n            localStorage.setItem('@RocketShoes:cart', JSON.stringify(cart));\n          } else {\n            toast.error('Quantidade solicitada fora de estoque');\n            return;\n          }\n        }\n      }\n\n      localStorage.setItem('@RocketShoes:cart', JSON.stringify(cart));\n    } catch (err) {\n      // TODO\n      toast.error('Erro na adição do produto');\n    }\n  };\n\n  const removeProduct = productId => {\n    try {\n      // TODO\n      const findProductInCart = cart.find(item => item.id === productId);\n\n      if (findProductInCart) {\n        const removeProducInCart = cart.filter(item => item.id !== productId);\n        setCart(removeProducInCart);\n        localStorage.setItem('@RocketShoes:cart', JSON.stringify(cart));\n      }\n    } catch {\n      // TODO\n      toast.error('Erro na remoção do produto');\n    }\n  };\n\n  const updateProductAmount = async ({\n    productId,\n    amount\n  }) => {\n    try {\n      // TODO\n      const response = await api.get(`/stock`);\n      const stock = response.data;\n      const stockByProduct = stock.find(item => item.id === productId);\n\n      if (stockByProduct === null || stockByProduct === void 0 ? void 0 : stockByProduct.id) {\n        const updateValited = stockByProduct.amount - amount < 0 ? false : true;\n\n        if (updateValited) {\n          const updatedCart = cart.map(item => item.id === productId ? { ...item,\n            amount: amount\n          } : item);\n          setCart(updatedCart);\n          localStorage.setItem('@RocketShoes:cart', JSON.stringify(cart));\n        } else {\n          toast.error('Quantidade solicitada fora de estoque');\n        }\n      }\n    } catch (err) {\n      // TODO\n      toast.error('Erro na alteração de quantidade do produto');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addProduct,\n      removeProduct,\n      updateProductAmount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"QJ1iMSCfV9uRAaJVnByGClt+s/w=\");\n\n_c = CartProvider;\nexport function useCart() {\n  _s2();\n\n  const context = useContext(CartContext);\n  return context;\n}\n\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/everton/www/ignite/trilha_reactjs/Chapter_II/desafios/ignite-template-reactjs-criando-um-hook-de-carrinho-de-compras-master/src/hooks/useCart.tsx"],"names":["createContext","useContext","useState","toast","api","CartContext","CartProvider","children","cart","setCart","storagedCart","localStorage","getItem","JSON","parse","addProduct","productId","response","get","productInCart","find","item","id","amount","updateProductAmount","responseStock","stock","data","stockByProduct","addValited","oldState","setItem","stringify","error","err","removeProduct","findProductInCart","removeProducInCart","filter","updateValited","updatedCart","map","useCart","context"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useContext, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { api } from '../services/api';\nimport { Product, Stock } from '../types';\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\ninterface UpdateProductAmount {\n  productId: number;\n  amount: number;\n}\n\ninterface CartContextData {\n  cart: Product[];\n  addProduct: (productId: number) => Promise<void>;\n  removeProduct: (productId: number) => void;\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\n}\n\nconst CartContext = createContext<CartContextData>({} as CartContextData);\n\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\n  const [cart, setCart] = useState<Product[]>(() => {\n  const storagedCart = localStorage.getItem('@RocketShoes:cart')\n\n    if (storagedCart) {\n      return JSON.parse(storagedCart);\n    }\n\n    return [];\n  });\n\n  const addProduct = async (productId: number) => {\n    \n    try {\n      // TODO\n      const response = await api.get(`/products/${productId}`);\n\n      const productInCart = cart.find(item => item.id === productId);\n\n      if(productInCart) {\n        const amount = productInCart.amount + 1;\n        updateProductAmount({productId, amount});\n      } else {\n\n        const responseStock = await api.get(`/stock`);\n        const stock: Stock[] = responseStock.data;\n        const stockByProduct = stock.find(item => item.id === productId);\n\n        if(stockByProduct?.id) {\n          response.data.amount = 1;\n\n          const addValited = stockByProduct.amount - response.data.amount < 0 ? false : true;\n          if (addValited) {\n            setCart(oldState => [...oldState, response.data])\n            localStorage.setItem('@RocketShoes:cart', JSON.stringify(cart));\n          } else {\n            toast.error('Quantidade solicitada fora de estoque');\n            return;\n          }\n        }\n      }\n      localStorage.setItem('@RocketShoes:cart', JSON.stringify(cart));\n    } catch (err) {\n      // TODO\n      toast.error('Erro na adição do produto');\n    }\n  };\n\n  const removeProduct = (productId: number) => {\n    try {\n      // TODO\n      const findProductInCart = cart.find(item => item.id === productId);\n\n      if(findProductInCart) {\n        const removeProducInCart = cart.filter(item => item.id !== productId);\n        \n        setCart(removeProducInCart);\n        localStorage.setItem('@RocketShoes:cart', JSON.stringify(cart));\n      }\n    } catch {\n      // TODO\n      toast.error('Erro na remoção do produto');\n    }\n  };\n\n  const updateProductAmount = async ({\n    productId,\n    amount,\n  }: UpdateProductAmount) => {\n    try {\n      // TODO\n      const response = await api.get(`/stock`);\n      const stock: Stock[] = response.data;\n      const stockByProduct = stock.find(item => item.id === productId);\n\n      if(stockByProduct?.id) {\n        const updateValited = stockByProduct.amount - amount < 0 ? false : true;\n        if (updateValited) {\n          const updatedCart = cart.map(item => item.id === productId ? {\n            ...item, amount: amount\n          } : item);\n    \n          setCart(updatedCart);\n          localStorage.setItem('@RocketShoes:cart', JSON.stringify(cart));\n        } else {\n          toast.error('Quantidade solicitada fora de estoque');\n        }\n      }\n    } catch (err) {\n      // TODO\n      toast.error('Erro na alteração de quantidade do produto');\n    }\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addProduct, removeProduct, updateProductAmount }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart(): CartContextData {\n  const context = useContext(CartContext);\n\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}